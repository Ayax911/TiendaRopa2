// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lib_repositorios.Implementaciones;

#nullable disable

namespace lib_repositorios.Migrations
{
    [DbContext(typeof(Conexion))]
    [Migration("20250417074359_migration1")]
    partial class migration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("lib_dominio.Entidades.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Compras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cliente")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("Lugar")
                        .HasColumnType("int");

                    b.Property<int>("MetodoPago")
                        .HasColumnType("int");

                    b.Property<int>("Sucursal")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Cliente");

                    b.HasIndex("Lugar");

                    b.HasIndex("MetodoPago");

                    b.HasIndex("Sucursal");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("lib_dominio.Entidades.DetallesCompras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Compra")
                        .HasColumnType("int");

                    b.Property<int>("Producto")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorBruto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Compra");

                    b.HasIndex("Producto");

                    b.ToTable("DetallesCompras");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Lugares", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lugares");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Marcas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("lib_dominio.Entidades.MetodosPagos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MetodosPagos");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Productos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Marca")
                        .HasColumnType("int");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Marca");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Sucursales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Compras", b =>
                {
                    b.HasOne("lib_dominio.Entidades.Clientes", "_Cliente")
                        .WithMany("Compras")
                        .HasForeignKey("Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lib_dominio.Entidades.Lugares", "_Lugar")
                        .WithMany("Compras")
                        .HasForeignKey("Lugar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lib_dominio.Entidades.MetodosPagos", "_MetodoPago")
                        .WithMany("Compras")
                        .HasForeignKey("MetodoPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lib_dominio.Entidades.Sucursales", "_Sucursal")
                        .WithMany("Compras")
                        .HasForeignKey("Sucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_Cliente");

                    b.Navigation("_Lugar");

                    b.Navigation("_MetodoPago");

                    b.Navigation("_Sucursal");
                });

            modelBuilder.Entity("lib_dominio.Entidades.DetallesCompras", b =>
                {
                    b.HasOne("lib_dominio.Entidades.Compras", "_Compra")
                        .WithMany("DetallesCompras")
                        .HasForeignKey("Compra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lib_dominio.Entidades.Productos", "_Producto")
                        .WithMany("DetallesCompras")
                        .HasForeignKey("Producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_Compra");

                    b.Navigation("_Producto");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Productos", b =>
                {
                    b.HasOne("lib_dominio.Entidades.Marcas", "_Marca")
                        .WithMany("Productos")
                        .HasForeignKey("Marca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_Marca");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Clientes", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Compras", b =>
                {
                    b.Navigation("DetallesCompras");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Lugares", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Marcas", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("lib_dominio.Entidades.MetodosPagos", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Productos", b =>
                {
                    b.Navigation("DetallesCompras");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Sucursales", b =>
                {
                    b.Navigation("Compras");
                });
#pragma warning restore 612, 618
        }
    }
}
